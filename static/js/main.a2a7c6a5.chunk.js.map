{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackButton.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","feedbackCounter","s","className","FeedbackButton","feedback","index","onLeaveFeedback","feedbackButton","type","onClick","prevState","FeedbackOptions","options","map","option","Section","title","children","App","useState","setGood","setNeutral","handleFeedback","positiveFeedbackPercentage","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uPAUeA,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC8BEC,EA5BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACvCC,EAAoBC,IAApBD,gBACR,OACE,qCACGF,EAAQ,GACP,qCACE,oBAAGI,UAAWF,EAAd,mBAAsCL,KACtC,oBAAGO,UAAWF,EAAd,sBAAyCJ,KACzC,oBAAGM,UAAWF,EAAd,kBAAqCH,KACrC,oBAAGK,UAAWF,EAAd,oBAAuCF,KACvC,oBAAGI,UAAWF,EAAd,gCAC+B,IAATL,EAAa,EAAII,EADvC,UAKO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0B,gBCM7BU,EAtBQ,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBACjCC,EAAmBN,IAAnBM,eACR,OACE,wBACEL,UAAWK,EACX,gBAAeH,EACfI,KAAK,SACLC,QAAS,WACPH,EAAgBD,IAAO,SAAAK,GAAS,OAAIA,EAAY,MALpD,SAQGN,KCKQO,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASN,EAAsB,EAAtBA,gBAClC,OAAOM,EAAQC,KAAI,SAACC,EAAQT,GAAT,OACjB,cAAC,EAAD,CAEED,SAAUU,EACVT,MAAOA,EACPC,gBAAiBA,GAHZQ,OCUIC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACGD,GAAS,6BAAKA,IACdC,MCFQ,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAGMyB,EAAiB,CAACF,EAASC,EAHjC,MAIMvB,EAAQH,EAAOC,EAAUC,EACzB0B,EAA6BzB,EAC/B0B,KAAKC,MAAO9B,EAAOG,EAAS,KAC5B,EAEJ,OACE,qCACE,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBJ,QAVP,CAAC,OAAQ,UAAW,OAUKN,gBAAiBgB,MAEtD,cAAC,EAAD,CAASN,MAAM,aAAf,SACE,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBwB,S,MCxB9BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACV,EAAD,MAEFW,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,gBAAkB,sC,kBCApCD,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.a2a7c6a5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const { feedbackCounter } = s;\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <>\r\n          <p className={feedbackCounter}>Good: {good}</p>\r\n          <p className={feedbackCounter}>Neutral: {neutral}</p>\r\n          <p className={feedbackCounter}>Bad: {bad}</p>\r\n          <p className={feedbackCounter}>Total: {total}</p>\r\n          <p className={feedbackCounter}>\r\n            Positive feedback: {good === 0 ? 0 : positivePercentage}%\r\n          </p>\r\n        </>\r\n      )}\r\n      {total === 0 && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackButton = ({ feedback, index, onLeaveFeedback }) => {\r\n  const { feedbackButton } = s;\r\n  return (\r\n    <button\r\n      className={feedbackButton}\r\n      data-feedback={feedback}\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onLeaveFeedback[index](prevState => prevState + 1);\r\n      }}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nFeedbackButton.propTypes = {\r\n  feedback: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onLeaveFeedback: PropTypes.arrayOf(PropTypes.func.isRequired).isRequired,\r\n};\r\n\r\nexport default FeedbackButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackButton from './FeedbackButton';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option, index) => (\r\n    <FeedbackButton\r\n      key={option}\r\n      feedback={option}\r\n      index={index}\r\n      onLeaveFeedback={onLeaveFeedback}\r\n    />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.arrayOf(PropTypes.func.isRequired).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = ['good', 'neutral', 'bad'];\n  const handleFeedback = [setGood, setNeutral, setBad];\n  const total = good + neutral + bad;\n  const positiveFeedbackPercentage = total\n    ? Math.round((good / total) * 100)\n    : 0;\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={handleFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positiveFeedbackPercentage}\n        />\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackCounter\":\"Statistics_feedbackCounter__1Cb92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButton\":\"FeedbackOptions_feedbackButton__11drZ\"};"],"sourceRoot":""}